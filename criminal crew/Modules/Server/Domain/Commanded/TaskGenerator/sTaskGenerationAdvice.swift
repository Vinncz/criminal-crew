import Foundation

/// Generated by some ``TaskGenerationStrategy``, to be used by ``TaskGenerator`` to dictate its generation algorithm.
public struct TaskGenerationAdvice : Advice, Identifiable {
    
    public let id = UUID()
    
    public init ( panelIdToOrderFrom: String, taskModifier: GameTaskModifier ) {
        self.components = [
            RecommendedPanelsToOrderFromAdviceComponent(recommendedPanelId: panelIdToOrderFrom, importance: .high),
            RecommendedAdditionalGameTaskModifierWhenOrderingFromSomeGameTaskAdviceComponent(taskGenerationModifier: taskModifier, importance: .high)
        ]
    }
    
    public var components: [any AdviceComponent]
    
}

extension TaskGenerationAdvice : Equatable {
    
    public static func == ( lhs: TaskGenerationAdvice, rhs: TaskGenerationAdvice ) -> Bool {
        lhs.id == rhs.id
    }
    
}

public struct RecommendedPanelsToOrderFromAdviceComponent : AdviceComponent {
    
    /// ``TaskGenerator`` should prioritize this panel id when generating a task; but it can always choose to ignore this advice.
    public let recommendedPanelId: String
    
    public let importance: AdviceComponentImporance
    
}

public struct RecommendedAdditionalGameTaskModifierWhenOrderingFromSomeGameTaskAdviceComponent : AdviceComponent {
    
    public let taskGenerationModifier: GameTaskModifier
    
    public let importance: AdviceComponentImporance
    
    public static func == (lhs: RecommendedAdditionalGameTaskModifierWhenOrderingFromSomeGameTaskAdviceComponent, rhs: RecommendedAdditionalGameTaskModifierWhenOrderingFromSomeGameTaskAdviceComponent) -> Bool {
        lhs.taskGenerationModifier == rhs.taskGenerationModifier
    }
    
}

public struct PanelTaskLoadBalanceAdviceComponent : AdviceComponent {
        
    /// ``TaskGenerator`` can refer to this threshold, to decide whether it should proceed with overruling the advice to order from panels which ``RecommendedPanelsToOrderFromAdviceComponent`` suggests. 
    public let panelLoadBalanceThreshold: Int
    
    public let importance: AdviceComponentImporance
    
}

public struct PanelCompositionAdviceComponent : AdviceComponent {
    
    /// The panel id which should be prioritized when generating a task.
    public let panelIdToBePrioritized: String
    
    /// The panel id which should be avoided when generating a task.
    public let panelIdToBeAvoided: String
    
    public let importance: AdviceComponentImporance
    
}
